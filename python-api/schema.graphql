schema {
    query: Query
}

type Company {
    zip: String
    sector: String
    full_time_employees: Int
    compensation_risk: Int
    audit_risk: Int
    long_business_summary: String
    city: String
    phone: String
    state: String
    share_holder_rights_risk: Int
    compensation_as_of_epoch_date: Int
    governance_epoch_date: Int
    board_risk: Int
    country: String
    website: String
    max_age: Int
    overall_risk: Int
    address: String
}

type HistorialData {
    date: String
    open: Float
    high: Float
    volume: Int
    ticker: String
}

type Earnings {
    date: String
    revenue: Float
    earnings: Float
    ticker: String
}

type CompanyResult {
    success: Boolean!
    errors: [String]
    data: Company
}

type HistorialDataResult {
    success: Boolean!
    errors: [String]
    data: [HistorialData]
}

type EarningsResult {
    success: Boolean!
    errors: [String]
    data: [Earnings]
}

type Query {
    getCompanyInfo(ticker: String!): CompanyResult!
    getHistoricalData(ticker: String!): HistorialDataResult!
    getYearly(ticker: String!): EarningsResult!
    getQuarterly(ticker: String!): EarningsResult!
}


